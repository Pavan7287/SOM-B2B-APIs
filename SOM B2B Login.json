{
  "swagger": "2.0",
  "info": {
    "title": "SOM B2B Login API",
    "version": "2.2.6",
    "description": "\n# Introduction\n\n<table><tbody><tr><td class = 'into_api' style='border:none;padding:0 0 0 0'><p>This web service is used to generate a valid security token which is used to consume the DOP and products based on the platform (e.g. ODO) RESTful services.</p></td></tr></tbody></table>\n\n# Frequently Asked Questions\n\n**Q: Can I send a broadcast message using the Telstra Messaging API?**\nA. Yes. Recipient numbers can be in the form of an array of strings if a broadcast message needs to be sent.\n\n**Q: How can i get support for this API?**\nA. *GSSAPACTelstraL2 <GSSAPACTelstraL2@amdocs.com>\n"
  },
  "host": "private.tapi.telstra.com",
  "basePath": "/v2",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://tapi.telstra.com/somb2b/v2/oauth/token",
      "scopes": {
        "NSMS": "List of values"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/somb2b/v2/oauth/token": {
      "post": {
        "description": "To generate an OAuth2 Authentication token, pass through your `Client key` and `Client secret` that you received when you registered for the **API Free Trial** Product.\nThe grant_type should be left as `client_credentials` and the scope as `NSMS`.\nThe token will expire in one hour.\n",
        "summary": "Generate OAuth2 token",
        "tags": [
          "Authentication"
        ],
        "operationId": "auth token",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "client_secret",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "grant_type",
            "in": "formData",
            "required": true,
            "type": "string",
            "default": "client_credentials"
          },
          {
            "name": "scope",
            "in": "formData",
            "required": true,
            "type": "string",
            "default": "SOMB2BScope"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OAuthResponse"
            },
            "examples": {}
          },
          "400": {
            "description": "unsupported_grant_type"
          },
          "401": {
            "description": "invalid_client"
          },
          "404": {
            "description": "The requested URI does not exist"
          },
          "503": {
            "description": "The service requested is currently unavailable"
          },
          "default": {
            "description": "An internal error occurred when processing the request"
          }
        }
      }
    },
    "/loginservice/login": {
      "post": {
        "tags": [
          "dop_security"
        ],
        "summary": "Performs a login using supplied credentials.",
        "description": "Performs a login with provided security credentials and return an authenticated token on success. The token must be passed with each request to RESTful service in the standard HTTP header: Authorization using the format: Bearer <token>",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated token",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden. Provided login credentials are invalid.",
            "schema": {
              "$ref": "#/definitions/Exception"
            }
          },
          "500": {
            "description": "unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "OAuthResponse": {
      "title": "OAuthResponse",
      "type": "object",
      "properties": {
        "access_token": {
          "description": "OAuth access token",
          "type": "string"
        },
        "token_type": {
          "description": "OAuth token type",
          "type": "string"
        },
        "expires_in": {
          "description": "OAuth expity time",
          "type": "string"
        }
      }
    },
    "Exception": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "required": [
        "password",
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}